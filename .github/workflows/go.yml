# This workflow will build a golang project and create a release
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go Build and Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.0'

    - name: Go get
      run: go get -v ./...

    - name: Build
      run: GOOS=windows GOARCH=amd64 go build -o ttrackerclient.exe ./timetracker/src/client/client.go

    - name: Build Daemon
      run: GOOS=windows GOARCH=amd64 go build -o ttrackerd.exe ./timetracker/src/daemon/daemon.go

    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: binaries
        path: |
          ./ttrackerclient.exe
          ./ttrackerd.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }} 
    
    steps:    
    - uses: actions/checkout@v3
    - name: Checkout and set RELEASE_VERSION envvar
      run: echo "RELEASE_VERSION=v0.2.0" >> $GITHUB_ENV

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: binaries

    - name: Create Release
      run: |
        ls -l
        gh release create "$RELEASE_VERSION" ./ttrackerclient.exe -t "Release $RELEASE_VERSION" -n "ttrackerclient $RELEASE_VERSION"
        gh release upload "$RELEASE_VERSION" ./ttrackerd.exe -n "ttrackerd $RELEASE_VERSION"
